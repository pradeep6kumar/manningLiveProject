from NaryNode3 import NaryNode
from BinaryNode3 import BinaryNode

root = NaryNode('Root')
a = root.add_child('a')
b = root.add_child('b')
c = root.add_child('c')
d = a.add_child('d')
e = a.add_child('e')
g1 = d.add_child('g1')
g2 = d.add_child('g2')
f = c.add_child('f')
h = f.add_child('h')
i = f.add_child('i')

root1 = BinaryNode('Root')
a1 = BinaryNode('A')
root1.add_left(a1)
b1 = BinaryNode('B')
root1.add_right(b1)
c1 = BinaryNode('C')
a1.add_left(c1)
d1 = BinaryNode('D')
a1.add_right(d1)
e1 = BinaryNode('E')
b1.add_right(e1)
f1 = BinaryNode('F')
e1.add_left(f1)

if __name__ == '__main__':
    print('Nary Tree')
    print(root)
    print(root.traverse_postorder())
    print(root.traverse_preorder())
    print('-'*60)
    print('Binary Tree')
    print(root1)
    print(root1.traverse_postorder())
    print(root1.traverse_inorder())
    print(root1.traverse_preorder())